version: "3"

services:
  api:
    build:
      context: .

    image: api
    container_name: api
    hostname: api
    restart: on-failure
    command: sh start.sh
    expose:
      - 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/workspace:cached
    stdin_open: true
    
    env_file:
      - ./.env.dev

    networks:
      - shared_network

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5682:5672"
      - "15682:15672"
    networks:
      - shared_network

  worker_logging:
    image: api
    command: celery -A restapi worker -Q logging -l info -E
    # command: tail -f /dev/null 
    depends_on:
      - api
      - rabbit
    env_file:
      - ./.env.dev
    # deploy:
    #   replicas: 2
    #   restart_policy:
    #     condition: on-failure
    #   resources:
    #     limits:
    #       cpus: '0.50'
    #       memory: 50M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 20M

    networks:
      - shared_network

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: on-failure
    tty: true
    depends_on: 
      - api
    expose:
      - 8000
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - shared_network

networks:
  shared_network:
    driver: bridge